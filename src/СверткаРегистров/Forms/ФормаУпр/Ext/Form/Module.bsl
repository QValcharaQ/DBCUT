
&НаСервере
Процедура СоздатьДокументыРБНаСервере(ТекстСКЛЗАпроса)
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.СформироватьДокументыДляРБ(ТекстСКЛЗАпроса);
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
КонецПроцедуры
&НаСервере
Процедура СоздатьДокументыРННаСервере(ТекстСКЛЗАпроса)
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.СформироватьДокументыДляРНОстатки(ТекстСКЛЗАпроса);
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
КонецПроцедуры
&НаСервере
Процедура ОчиститьРНОборотыНаСервере(ТекстСКЛЗАпроса)
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.СформироватьЗапросРНОбороты(ТекстСКЛЗАпроса);
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
КонецПроцедуры
&НаСервере
Процедура СвернутьРСНаСервере(ТекстСКЛЗАпроса)
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.СформироватьЗапросРС(ТекстСКЛЗАпроса);
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
КонецПроцедуры
&НаСервере
Процедура ОчиститьТЧДокументовНаСервере(ТекстСКЛЗАпроса)
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ОчиститьТЧДокументов(ТекстСКЛЗАпроса);
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
КонецПроцедуры



&НаКлиенте
Процедура СоздатьДокументыРБ(Команда)
	ТекстСКЛЗАпроса= Новый ТекстовыйДокумент;
	СоздатьДокументыРБНаСервере(ТекстСКЛЗАпроса);
	ТекстСКЛЗАпроса.Показать("ОчисткаРБ","AccRgClean.sql");
КонецПроцедуры          

&НаКлиенте
Процедура СоздатьДокументыРНОСтатки(Команда)
	ТекстСКЛЗАпроса= Новый ТекстовыйДокумент;
	СоздатьДокументыРННаСервере(ТекстСКЛЗАпроса);
	ТекстСКЛЗАпроса.Показать("ОчисткаРНОстатки","AccumRgClean.sql");
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьРНОбороты(Команда)
	ТекстСКЛЗАпроса= Новый ТекстовыйДокумент;
	ОчиститьРНОборотыНаСервере(ТекстСКЛЗАпроса);
	ТекстСКЛЗАпроса.Показать("ОчисткаРНОборотов","AccumRgObClean.sql");
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРС(Команда)
	ТекстСКЛЗАпроса= Новый ТекстовыйДокумент;
	СвернутьРСНаСервере(ТекстСКЛЗАпроса);
	ТекстСКЛЗАпроса.Показать("ОчисткаПериодическихРС","InfoRgClean.sql");
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТЧДокументов(Команда)
	ТекстСКЛЗАпроса= Новый ТекстовыйДокумент;
	ОчиститьТЧДокументовНаСервере(ТекстСКЛЗАпроса);
	ТекстСКЛЗАпроса.Показать("ОчисткаТЧДокументов","DocVTClean.sql");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьСписокПоМетаданным(Типрегистра,ИмяРегистра)
	СписокВыбора=Новый Массив;
	МДРБ = Метаданные[ТипРегистра][ИмяРегистра];
	ТипыРегистратора=МДРБ.СтандартныеРеквизиты.Регистратор.Тип.Типы(); 
	СписокВыбораРегистраторов=СписокВыбора;
	Для каждого ТипРегистратора Из ТипыРегистратора Цикл
		СписокВыбораРегистраторов.Добавить(Метаданные.НайтиПоТипу(ТипРегистратора).Имя);
	КонецЦикла;
	Возврат СписокВыбора;	
КонецФункции

&НаКлиенте
Процедура УстановитьСписокРегистраторов(ПолеЭлемента,Типрегистра,ИмяРегистра)  
	ДоступныеРегистраторы=ЗаполнитьСписокПоМетаданным(Типрегистра,ИмяРегистра);
	ПолеЭлемента.СписокВыбора.ЗагрузитьЗначения(ДоступныеРегистраторы);
КонецПроцедуры


&НаКлиенте
Процедура РегистрыБухгалтерииСписокПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если Элемент.ТекущийЭлемент.Имя= "РегистрыБухгалтерииСписокРегистратор" Тогда
		УстановитьСписокРегистраторов(Элемент.ТекущийЭлемент,"РегистрыБухгалтерии",Элемент.ТекущиеДанные.Регистр);
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура РегистрыНакопленияОстаткиСписокПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если Элемент.ТекущийЭлемент.Имя= "РегистрыНакопленияОстаткиСписокРегистратор" Тогда
		УстановитьСписокРегистраторов(Элемент.ТекущийЭлемент,"РегистрыНакопления",Элемент.ТекущиеДанные.Регистр);
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ЗаполнитьРегистрыБухгалтерии();
	ОбработкаОбъект.ЗаполнитьРегистрыНакопления();
	ОбработкаОбъект.ЗаполнитьРегистрыСведений();
	ОбработкаОбъект.ЗаполнитьДокументы();
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
КонецПроцедуры


&НаКлиенте
Процедура РегистрыБухгалтерииСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	ОТказ=истина;
КонецПроцедуры


&НаКлиенте
Процедура РегистрыБухгалтерииСписокПередУдалением(Элемент, Отказ)
	ОТказ=Истина;
КонецПроцедуры


&НаКлиенте
Процедура РегистрыНакопленияОстаткиСписокПередУдалением(Элемент, Отказ)
	ОТказ=Истина;
КонецПроцедуры

&НаКлиенте
Процедура РегистрыНакопленияОстаткиСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ=Истина;
КонецПроцедуры


&НаСервере
Процедура УстановитьПометкиНаСервере(ИмяТаблицы,ЗначениеПометки)
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.УстановитьПометкуТЧ(ОбработкаОбъект[ИмяТаблицы],ЗначениеПометки);
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	ИмяТЧ=СтрЗаменить(Элементы.Страницы.текущаяСтраница.Имя,"Группа","");
	УстановитьПометкиНаСервере(ИмяТЧ,Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	ИмяТЧ=СтрЗаменить(Элементы.Страницы.текущаяСтраница.Имя,"Группа","");
	УстановитьПометкиНаСервере(ИмяТЧ,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ДокументыСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	ОТказ=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДокументыСписокПередУдалением(Элемент, Отказ)
	Отказ=Истина;
КонецПроцедуры

&НаСервере
Функция ТекстНастроекДляСохранения()
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	ДанныеДляСохранения=ОбработкаОбъект.ДанныеДляСохранения();
	Возврат ДанныеДляСохранения;
КонецФункции

&НаКлиенте
Процедура СохранитьНастройкиВФайл()
	ТекстНастроек=ТекстНастроекДляСохранения();                             
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Заголовок = "Сохранить как файл";
	Диалог.ПолноеИмяФайла = ""; 
	Фильтр = "json (*.json)|*.json"; 
	Диалог.Фильтр = Фильтр; 
	Диалог.МножественныйВыбор = Ложь;
	Оповещение=Новый ОписаниеОповещения("СохранитьНастройкиЗавершение", ЭтаФорма, Новый Структура("Диалог,ТекстНастроек", Диалог,ТекстНастроек));
	Диалог.Показать(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	ТекстНастроек=ДополнительныеПараметры.ТекстНастроек;
	ЗаписьДжейсон = Новый ЗаписьJSON;
	ЗаписьДжейсон.ОткрытьФайл(ВыбранныеФайлы[0]);
	Настройки=Новый НастройкиСериализацииJSON;
	Настройки.ВариантЗаписиДаты=ВариантЗаписиДатыJSON.ЛокальнаяДата;
	ЗаписатьJSON(ЗаписьДжейсон,ТекстНастроек,Настройки);
	ЗаписьДжейсон.Закрыть();
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьНастройкиИзФайла()  
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Загрузить настройку файл";
	Диалог.ПолноеИмяФайла = ""; 
	Фильтр = "json (*.json)|*.json"; 
	Диалог.Фильтр = Фильтр; 
	Диалог.МножественныйВыбор = Ложь;
	Оповещение=Новый ОписаниеОповещения("ЗагрузитьНастройкиЗавершение", ЭтаФорма);
	Диалог.Показать(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройкиЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	ИмяДляОткрытия=ВыбранныеФайлы[0];
	ЧтениеДжейсон = Новый ЧтениеJSON;
	ЧтениеДжейсон.ОткрытьФайл(ИмяДляОткрытия);
	Данные=ПрочитатьJSON(ЧтениеДжейсон,Ложь,"ДатаНачалаНовогоПериода",);
	ЗагрузитьНастройкиВОбъект(Данные);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиВОбъект(Данные)
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ЗагрузитьНастройки(Данные);
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	СохранитьНастройкиВФайл();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройки(Команда)
	ЗагрузитьНастройкиИзФайла();
КонецПроцедуры

&НаСервере
Процедура ПересчитатьИтогиРННаСервере()
	ОбработкаОбъект=РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ПересчитатьИтогиРНОстатки();
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьИтогиРН(Команда)
	ПересчитатьИтогиРННаСервере();
КонецПроцедуры





